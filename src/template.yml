apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: ${req.body.id}
spec:
  dataVolumeTemplates:
  - metadata:
      name: ${req.body.id}-datavolume
    spec:
      pvc:
        storageClassName: ${req.body.storage.class}
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: ${req.body.storage.size}Gi
      source:
        registry:
          url: "${req.body.storage.registry}"
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/size: ${kubevirt_size_S}
        kubevirt.io/domain: ${req.body.id}
    spec:
      domain:
        devices:
          disks:
          - name: containerdisk
            disk:
              bus: virtio
          - name: cloudinitdisk
            disk:
              bus: virtio
          interfaces:
          - name: default
            masquerade: {}
        resources:
          requests:
            memory: ${req.body.spec.memory}
            cpu: '${req.body.spec.cpu}'
      networks:
      - name: default
        pod: {}
      volumes:
      - name: containerdisk
        dataVolume:
          name: ${req.body.id}-datavolume
      - name: cloudinitdisk
        cloudInitNoCloud:
          userData: |
            #cloud-config
            hostname: ${req.body.id}
            disable_root: false
            ssh_authorized_keys: ${ssh_authorized_keys}
---